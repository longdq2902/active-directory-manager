@model IEnumerable<ADPasswordManager.Models.Entities.DelegationRule>

@{
    ViewData["Title"] = "Delegation Management";
}

<div id="rule-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-10 mx-auto p-5 border w-full max-w-2xl shadow-lg rounded-md bg-white">
        <div class="flex justify-between items-center border-b pb-3">
            <h3 id="modal-title" class="text-xl font-semibold text-gray-900"></h3>
            <button id="close-modal-btn" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
            </button>
        </div>
        <div class="mt-4">
            <iframe id="rule-iframe" src="about:blank" class="w-full h-96"  frameborder="1"></iframe>
        </div>
    </div>
</div>


<div class="max-w-7xl mx-auto">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-3xl font-bold text-gray-800">@ViewData["Title"]</h1>
        <div>
            <button id="delete-selected-btn"
                    class="hidden inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700">
                Delete Selected
            </button>
            <button id="add-rule-btn"
                    class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700">
                Add New Rule
            </button>
        </div>
    </div>

    <form id="rules-form" asp-action="DeleteMultiple" method="post">
        <div class="bg-white shadow-md rounded-lg overflow-x-auto">
            <table class="min-w-full leading-normal">
                <thead>
                    <tr class="border-b-2 border-gray-200 bg-gray-50 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        <th class="px-5 py-3 w-12">
                            <input type="checkbox" id="select-all-checkbox" class="h-4 w-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500">
                        </th>
                        <th class="px-5 py-3">Admin Group</th>
                        <th class="px-5 py-3">Managed Groups</th>
                        <th class="px-5 py-3">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var rule in Model)
                    {
                        <tr class="border-b border-gray-200 hover:bg-gray-100">
                            <td class="px-5 py-4">
                                <input type="checkbox" name="ruleIds" value="@rule.Id" class="rule-checkbox h-4 w-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500">
                            </td>
                            <td class="px-5 py-4 text-sm">
                                <p class="text-gray-900 font-semibold whitespace-no-wrap">@rule.AdminGroup</p>
                            </td>
                            <td class="px-5 py-4 text-sm">
                                <div class="flex flex-wrap gap-2">
                                    @foreach (var group in rule.ManagedGroups.Split(',', StringSplitOptions.RemoveEmptyEntries))
                                    {
                                        <span class="px-2 py-1 bg-gray-200 text-gray-800 text-xs font-medium rounded-full">@group</span>
                                    }
                                </div>
                            </td>
                            <td class="px-5 py-4 text-sm">
                                <a asp-action="Edit" asp-route-id="@rule.Id"
                                   class="edit-rule-btn text-indigo-600 hover:text-indigo-900 mr-4 font-semibold">Edit</a>
                                <a asp-action="Delete" asp-route-id="@rule.Id"
                                   class="delete-rule-btn text-red-600 hover:text-red-900 font-semibold">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // ... (Script cho modal Add/Edit/Delete đơn lẻ không đổi) ...
            const ruleModal = document.getElementById('rule-modal');
            const iframe = document.getElementById('rule-iframe');
            const closeRuleModalBtn = document.getElementById('close-modal-btn');
            const addRuleBtn = document.getElementById('add-rule-btn');
            const modalTitle = document.getElementById('modal-title');

            const openRuleModal = (url, title, height = '40rem') => {
                modalTitle.textContent = title;
                iframe.style.height = height;
                iframe.src = url;
                ruleModal.classList.remove('hidden');
            };
            const closeRuleModal = () => {
                ruleModal.classList.add('hidden');
                iframe.src = 'about:blank';
            };

            addRuleBtn.addEventListener('click', () => { openRuleModal('@Url.Action("Create")', 'Add New Rule'); });
            document.querySelectorAll('.edit-rule-btn').forEach(btn => {
                btn.addEventListener('click', (e) => { e.preventDefault(); openRuleModal(e.currentTarget.href, 'Edit Rule'); });
            });
            document.querySelectorAll('.delete-rule-btn').forEach(btn => {
                btn.addEventListener('click', (e) => { e.preventDefault(); openRuleModal(e.currentTarget.href, 'Confirm Deletion', '20rem'); });
            });
            closeRuleModalBtn.addEventListener('click', closeRuleModal);
            ruleModal.addEventListener('click', (e) => { if (e.target === ruleModal) closeRuleModal(); });
            window.addEventListener('message', function(event) {
                if (event.data === 'ruleSaved') { closeRuleModal(); window.location.reload(); }
                if (event.data === 'closeRuleModal') { closeRuleModal(); }
            }, false);

            // --- SCRIPT CẬP NHẬT CHO XÓA HÀNG LOẠT ---
            const selectAllCheckbox = document.getElementById('select-all-checkbox');
            const ruleCheckboxes = document.querySelectorAll('.rule-checkbox');
            const deleteSelectedBtn = document.getElementById('delete-selected-btn');

            function toggleDeleteButton() {
                const anyChecked = Array.from(ruleCheckboxes).some(cb => cb.checked);
                deleteSelectedBtn.classList.toggle('hidden', !anyChecked);
            }

            selectAllCheckbox.addEventListener('change', function() {
                ruleCheckboxes.forEach(checkbox => { checkbox.checked = this.checked; });
                toggleDeleteButton();
            });

            ruleCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    if (!this.checked) { selectAllCheckbox.checked = false; }
                    else { selectAllCheckbox.checked = Array.from(ruleCheckboxes).every(cb => cb.checked); }
                    toggleDeleteButton();
                });
            });

            deleteSelectedBtn.addEventListener('click', function(e) {
                e.preventDefault();
                const checkedIds = Array.from(ruleCheckboxes)
                                      .filter(cb => cb.checked)
                                      .map(cb => cb.value);

                if (checkedIds.length > 0) {
                    let url = '@Url.Action("DeleteMultipleConfirmation")' + '?' + checkedIds.map(id => 'ruleIds=' + id).join('&');
                    openRuleModal(url, 'Confirm Multiple Deletion', '30rem');
                }
            });
        });
    </script>
}